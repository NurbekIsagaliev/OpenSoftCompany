Секция: Работа с базой данных (MySQL)

# ЗАДАЧА №1
# Есть таблица salary
# | id: integer | employee_id: integer | date: datetime | value: integer |
# 
# задача: вывести вторую по величине зарплату 5-ого сотрудника
# (employee_id = 5) за 2021 год

# предоставьте 2 варианта решения данной задачи


1)вариант:
SELECT MAX(value) FROM salary WHERE value NOT IN (SELECT Max(value) FROM salary) and employee_id = 5 and year(date) =2022;
2)вариант:
SELECT MAX(value) From salary WHERE value < (SELECT Max(value) FROM salary)  and employee_id = 5 and year(date)=2022;


# ЗАДАЧА №2
# Есть таблица advertisements 
# | id: integer | title: char(255) | description: longtext | ... |
# Есть таблица params 
# | id: integer | key: char(255) | type: char(255) |
# Есть таблица advert_params 
# | advert_id: integer | param_id: integre | value: char(255) |

# Требуется написать запрос, который выведет на экран объявления в которых 
# все значения параметров удовлетворяют условию:
# цвет: черный, цена от: 5000 цена до: 15000, есть рассрочка: да


select a.id, a.title, color_table.color, price_table.price, installment_plan_table.installment_plan  from advertisements a 
join 

(select ap.advert_id, ap.value color from advert_params ap
join params p on p.id = ap.param_id
where  p.key = 'color' and ap.value = 'черный') color_table

on color_table.advert_id=a.id

join
(select ap.advert_id, ap.value price from advert_params ap
join params p on p.id = ap.param_id 
where p.key = 'price' and CAST(REGEXP_REPLACE(COALESCE(ap.value ,'0'), '[^0-9]+', '0') AS INTEGER) between 5000 and 15000) price_table

on price_table.advert_id=a.id

join
(select ap.advert_id, ap.value installment_plan from advert_params ap
join params p on p.id = ap.param_id 
where p.key = 'installment_plan' and ap.value = 'да') installment_plan_table
on installment_plan_table.advert_id = a.id 
     





Секция: Алгоритмы(php)
// Есть массив строк data, необходимо написать функцию, для группировки 
// строк по анаграммам. Нужно сгруппировать строки, которые состоят 
// из одинаковых символов, символы в них могут повторяться, распологаться 
// в разном порядке.

$data = ['tr', 'abc', 'bca', 'rt', 'rtr', 'op', 'cba', 'po', 'acacb'];
// На выходе должно получиться следующее
$expected = [
$data = ['tr', 'abc', 'bca', 'rt', 'rtr', 'op', 'cba', 'po', 'acacb'];




function annagram($word, $word1)
{


  $arr = str_split($word);
  $arr1 = str_split($word1);

  if (
    implode(
      '',
      array_unique(
        array_merge(
          $arr,
          $arr1
        )
      )
    ) == implode(
      '',
      array_unique($arr)
    ) &&
    implode(
      '',
      array_unique(
        array_merge(
          $arr1,
          $arr
        )
      )
    ) == implode(
      '',
      array_unique($arr1)
    )
  ) {
    return true;
  } else {
    return false;
  }
}

function maping($data)
{

  $expected = [[]];

  for ($i = 0; $i < count($data); $i++) {
    foreach ($data as $item) {
      if (annagram($data[$i], $item) == true) {

        $expected[$item][] = $data[$i];

      }

    }

  }

  array_shift($expected);

  

  
  $output = [];

  foreach ($expected as $ex) {
    if (!in_array($ex, $output)) {
      
      $output[] = $ex;
    }
  }
return $output;
}

print_r(maping($data));
